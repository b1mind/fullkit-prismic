:root {
	//colors

	//paragraph/fonts
	--fs-1: 0.5rem;
	--fs-2: 0.75rem;
	--fs-5: 1rem;
	--fs-6: 1.25rem;
	--fs-7: 1.5rem;
	--fs-8: 2rem;
	--fs-9: 2.2rem;

	//spacings

	//> tokens
	//note bounding tokens should be in REM
	--content-max: 920px;
	--content-min: 280px;
	--section-max: ;
	--section-min: ;

	--primary-clr: ;
	--primary-bg: ;
	--secondary-clr: ;
	--secondary-bg: black;
	--highlight-clr: ;
	--highlight-bg: ;

	--shadow-cat: ;
	--shadow-box: ;
	--shadow-text: ;

	//todo make variable large fonts
	//Headings/Titles
	--title-lg: 2.35rem;
	--title-md: 1.75rem;
	--title-sm: 1.3rem;
	--title-xs: 0.85rem;

	--text-lg: var(--fs-8);
	--text-med: var(--fs-6);
	--text-sm: var(--fs-5);
	--text-xs: var(--fs-2);

	//note spacer and gap values should be hard coded? (not REM)
	--spacer-xl: 2.5rem;
	--spacer-lg: 10rem;
	--spacer-md: 5rem;
	--spacer-sm: 25px;
	--spacer-xs: 10px;

	--gap-lg: ;
	--gap-md: ;
	--gap-sm: ;

	--radius-img: ;
	--radius-btn: ;
	--radius-outer: ;
	--radius-inner: ;
}

//> defaults
* {
	box-sizing: border-box;
}

html,
body {
	height: 100%;
}

body {
	margin: 0;
	color: whitesmoke;
	font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif,
		'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
	background-color: #1b1b1b;
}

img {
	display: block;
	max-width: 100%;
	// height: 100%;
	object-fit: cover;
}

a {
	color: blueviolet;
	text-decoration: none;

	&:hover {
		text-decoration: underline;
	}
}

//safety border
//need to make a token for borders
nav a {
	padding-block-end: 0.25rem;
	border-bottom: 0.15em solid transparent;
}

:not([aria-current='page']) nav a:hover {
	text-decoration: none;
	border-bottom: 0.15em solid white;
}

nav a[aria-current='page'] {
	border-bottom: 0.15em solid white;
}

p {
	margin: 0;
}

p + p {
	margin-block-start: 0.35rem;
}

// .spacer > * + * {
// 	margin-block-start: 10rem;
// }

//> utils
.wrapper {
	min-height: 100%;
	min-height: 100svh;
	display: grid;
	grid-template-columns:
		[full-start]
		minmax(1rem, 1fr)
		[content-start]
		minmax(0, var(--content-max))
		[content-end]
		minmax(1rem, 1fr)
		[full-end];
	grid-template-rows: auto 1fr auto;
}

.wrap-full,
[data-slice-variation*='Full'] {
	grid-column: full;
	display: grid;
	grid-template-columns: inherit;
}

.wrap-content {
	grid-column: content;
	// display: grid;
	// grid-template-columns: inherit;
}

.container {
	//todo refactor containers to use wrapper
	grid-column: content;
}
