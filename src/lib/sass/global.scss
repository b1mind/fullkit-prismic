:root {
	//colors

	//paragraph/fonts
	--fs-1: 0.5rem;
	--fs-2: 0.75rem;
	--fs-5: 1rem;
	--fs-6: 1.25rem;
	--fs-7: 1.5rem;
	--fs-8: 2rem;
	--fs-9: 2.2rem;
	
	--fw-thin: 100;
	--fw-normal: initial; //note will this work? test it
	--fw-bold: 600;
	--fw-bolder: 800;

	//spacings

	//> tokens
	//note bounding tokens should be in REM
	--content-max: 920px;
	--content-min: 280px;
	--content-padding: var(--gap-sm);
	--section-max: ;
	--section-min: ;

	--primary-clr: blueviolet;
	--primary-bg: #1b1b1b;
	--secondary-clr: ;
	--secondary-bg: black;
	--highlight-clr: ;
	--highlight-bg: ;

	--shadow-cat: ;
	--shadow-box: ;
	--shadow-txt: text-shadow: 2px 1px 2px black;

	//todo make variable large fonts
	//Headings/Titles
	--title-lg: 2.35rem;
	--title-md: 1.75rem;
	--title-sm: 1.3rem;
	--title-xs: 0.85rem;

	--text-lg: var(--fs-8);
	--text-md: var(--fs-6);
	--text-sm: var(--fs-5);
	--text-xs: var(--fs-2);

	//note spacer and gap values should be hard coded? (not REM)
	--spacer-xl: 2.5rem;
	--spacer-lg: 8rem;
	--spacer-md: 2.5rem;
	--spacer-sm: 1em;
	--spacer-xs: 0.5em;

	@media (max-width: 600px) {
		--spacer-lg: 4rem;
	}

	--gap-lg: 32px;
	--gap-md: 24px;
	--gap-sm: 16px;
	--gap-xs: 8px;

	--pad-block: 0.25em;
	--pad-inline: 1em;

	--border-sm: 2px;
	--border-md: 4px;

	--radius-img: 10px;
	--radius-btn: 5px;
	//note watch video Kevin just did on calc out/inner for matching
	--radius-outer: ;
	--radius-inner: ;
}

//worst perf selector .. when do I need to assign it to elements if I'm grid wrapped?
//note test * border-box
* {
	box-sizing: border-box;
}

//> defaults

html,
body {
	height: 100%;
}

body {
	margin: 0;
	color: whitesmoke;
	font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif,
		'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
	background-color: var(--primary-bg);
}

img {
	max-width: 100%;
	// height: 100%;
	display: block;
	object-fit: cover;
}

a {
	color: var(--primary-clr);
	text-decoration: none;

	&:hover {
		text-decoration: underline;
	}
}

//safety border
//need to make a token for borders
nav a {
	padding-block-end: 0.25rem;
	border-bottom: 0.15em solid transparent;
}

:not([aria-current='page']) nav a:hover {
	text-decoration: none;
	border-bottom: 0.15em solid white;
}

nav a[aria-current='page'] {
	border-bottom: 0.15em solid white;
}

p {
	margin: 0;
	line-height: 1.2;
}

p + p {
	margin-block-start: 0.8em;
}

.spacer > * + * {
	margin-block-start: var(--spacer-sm);
}

//> utils
.wrapper {
	min-height: 100%;
	min-height: 100svh;
	display: grid;
	grid-template-columns:
		[full-start]
		minmax(var(--gap-sm), 1fr)
		[popout-start]
		minmax(0, 0.25fr)
		[content-start]
		minmax(0, var(--content-max))
		[content-end]
		minmax(0, 0.25fr)
		[popout-end]
		minmax(var(--gap-sm), 1fr)
		[full-end];
	grid-template-rows: auto 1fr auto;
}

.wrap-full,
[data-slice-variation*='Full'] {
	grid-column: full;
	display: grid;
	grid-template-columns: inherit;
}

.wrap-pop {
	grid-column: popout;
}

.wrap-content {
	grid-column: content;
}

//todo refactor containers to use wrapper
.container {
	grid-column: content;
}

.btn {
	--pad-block: 0.25em;
	--pad-inline: 1em;
	max-width: max-content;
	padding-block: var(--pad-block);
	padding-inline: var(--pad-inline);
	display: inline-grid;
	place-items: center;
	color: var(--white, white);
	font-weight: 600;
	text-transform: capitalize;

	&:hover {
		text-decoration: none;
	}

	&-primary {
		@extend .btn;
		border-radius: var(--radius-btn);
		background-color: var(--primary-clr, blueviolet);
	}

	&-secondary {
		@extend .btn;
		padding-block: calc(var(--pad-block) - var(--border-sm));
		padding-inline: calc(var(--pad-inline) - var(--border-sm));
		border: var(--border-sm, 2px) solid var(--primary-clr);
		border-radius: var(--radius-btn);
	}
}

.btn:last-child {
	margin-block: var(--spacer-sm);
}
